'use strict';
var app;

app = angular.module('app', ['ngRoute', 'ngCookies', 'jed']);

app.config([
  '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
    return $routeProvider.when('/home', {
      templateUrl: 'partials/home.html',
      controller: 'HomeController'
    }).when('/other', {
      templateUrl: 'partials/other.html',
      controller: 'OtherController'
    }).otherwise({
      redirectTo: '/home'
    });
  }
]).run([
  '$rootScope', 'i18n', function($rootScope, i18n) {
    i18n.setTranslationPath('translations');
    $rootScope.languages = [
      {
        name: 'English',
        value: 'en_US'
      }, {
        name: 'French',
        value: 'fr_FR'
      }
    ];
    $rootScope.changeLang = function(value) {
      return i18n.setLang(value);
    };
    return $rootScope.isLang = function(value) {
      return i18n.getLang() === value;
    };
  }
]);

app.controller('HomeController', [
  '$scope', 'i18n', function($scope, i18n) {
    i18n.loadPage('home').then(function() {
      return $scope.title = i18n._('Text translated from the controller');
    });
    $scope.nbr = 10;
    $scope.object = 'object';
    $scope.objects = 'objects';
    return $scope.simplePlural = 2;
  }
]);

app.controller('OtherController', [
  'i18n', function(i18n) {
    return i18n.loadPage('other');
  }
]);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBQSxDQUFBO0FBQUEsSUFBQSxHQUFBOztBQUFBLEdBRUEsR0FBTSxPQUFPLENBQUMsTUFBUixDQUFlLEtBQWYsRUFBc0IsQ0FBQyxTQUFELEVBQVksV0FBWixFQUF5QixLQUF6QixDQUF0QixDQUZOLENBQUE7O0FBQUEsR0FJRyxDQUFDLE1BQUosQ0FBVztFQUNULGdCQURTLEVBRVQsbUJBRlMsRUFHVCxTQUFDLGNBQUQsRUFBaUIsaUJBQWpCLEdBQUE7V0FDRSxjQUNFLENBQUMsSUFESCxDQUNRLE9BRFIsRUFFSTtBQUFBLE1BQUEsV0FBQSxFQUFhLG9CQUFiO0FBQUEsTUFDQSxVQUFBLEVBQVksZ0JBRFo7S0FGSixDQUlFLENBQUMsSUFKSCxDQUlRLFFBSlIsRUFLSTtBQUFBLE1BQUEsV0FBQSxFQUFhLHFCQUFiO0FBQUEsTUFDQSxVQUFBLEVBQVksaUJBRFo7S0FMSixDQU9FLENBQUMsU0FQSCxDQVFJO0FBQUEsTUFBQSxVQUFBLEVBQVksT0FBWjtLQVJKLEVBREY7RUFBQSxDQUhTO0NBQVgsQ0FjQSxDQUFDLEdBZEQsQ0FjSztFQUNILFlBREcsRUFFSCxNQUZHLEVBR0gsU0FBQyxVQUFELEVBQWEsSUFBYixHQUFBO0FBQ0UsSUFBQSxJQUFJLENBQUMsa0JBQUwsQ0FBd0IsY0FBeEIsQ0FBQSxDQUFBO0FBQUEsSUFFQSxVQUFVLENBQUMsU0FBWCxHQUF1QjtNQUNyQjtBQUFBLFFBQ0UsSUFBQSxFQUFNLFNBRFI7QUFBQSxRQUVFLEtBQUEsRUFBTyxPQUZUO09BRHFCLEVBS3JCO0FBQUEsUUFDRSxJQUFBLEVBQU0sUUFEUjtBQUFBLFFBRUUsS0FBQSxFQUFPLE9BRlQ7T0FMcUI7S0FGdkIsQ0FBQTtBQUFBLElBYUEsVUFBVSxDQUFDLFVBQVgsR0FBd0IsU0FBQyxLQUFELEdBQUE7YUFDdEIsSUFBSSxDQUFDLE9BQUwsQ0FBYSxLQUFiLEVBRHNCO0lBQUEsQ0FieEIsQ0FBQTtXQWdCQSxVQUFVLENBQUMsTUFBWCxHQUFvQixTQUFDLEtBQUQsR0FBQTthQUNsQixJQUFJLENBQUMsT0FBTCxDQUFBLENBQUEsS0FBa0IsTUFEQTtJQUFBLEVBakJ0QjtFQUFBLENBSEc7Q0FkTCxDQUpBLENBQUE7O0FBQUEsR0EwQ0csQ0FBQyxVQUFKLENBQWUsZ0JBQWYsRUFBaUM7RUFDL0IsUUFEK0IsRUFFL0IsTUFGK0IsRUFHL0IsU0FBQyxNQUFELEVBQVMsSUFBVCxHQUFBO0FBQ0UsSUFBQSxJQUFJLENBQUMsUUFBTCxDQUFjLE1BQWQsQ0FBcUIsQ0FBQyxJQUF0QixDQUEyQixTQUFBLEdBQUE7YUFDekIsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFJLENBQUMsQ0FBTCxDQUFPLHFDQUFQLEVBRFU7SUFBQSxDQUEzQixDQUFBLENBQUE7QUFBQSxJQUdBLE1BQU0sQ0FBQyxHQUFQLEdBQWEsRUFIYixDQUFBO0FBQUEsSUFJQSxNQUFNLENBQUMsTUFBUCxHQUFnQixRQUpoQixDQUFBO0FBQUEsSUFLQSxNQUFNLENBQUMsT0FBUCxHQUFpQixTQUxqQixDQUFBO1dBTUEsTUFBTSxDQUFDLFlBQVAsR0FBc0IsRUFQeEI7RUFBQSxDQUgrQjtDQUFqQyxDQTFDQSxDQUFBOztBQUFBLEdBdURHLENBQUMsVUFBSixDQUFlLGlCQUFmLEVBQWtDO0VBQ2hDLE1BRGdDLEVBRWhDLFNBQUMsSUFBRCxHQUFBO1dBQ0UsSUFBSSxDQUFDLFFBQUwsQ0FBYyxPQUFkLEVBREY7RUFBQSxDQUZnQztDQUFsQyxDQXZEQSxDQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5hcHAgPSBhbmd1bGFyLm1vZHVsZSAnYXBwJywgWyduZ1JvdXRlJywgJ25nQ29va2llcycsICdqZWQnXVxuXG5hcHAuY29uZmlnKFtcbiAgJyRyb3V0ZVByb3ZpZGVyJyxcbiAgJyRsb2NhdGlvblByb3ZpZGVyJ1xuICAoJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSAtPlxuICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgICAud2hlbiAnL2hvbWUnLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2hvbWUuaHRtbCdcbiAgICAgICAgY29udHJvbGxlcjogJ0hvbWVDb250cm9sbGVyJ1xuICAgICAgLndoZW4gJy9vdGhlcicsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAncGFydGlhbHMvb3RoZXIuaHRtbCdcbiAgICAgICAgY29udHJvbGxlcjogJ090aGVyQ29udHJvbGxlcidcbiAgICAgIC5vdGhlcndpc2VcbiAgICAgICAgcmVkaXJlY3RUbzogJy9ob21lJ1xuXSlcbi5ydW4oW1xuICAnJHJvb3RTY29wZSdcbiAgJ2kxOG4nXG4gICgkcm9vdFNjb3BlLCBpMThuKSAtPlxuICAgIGkxOG4uc2V0VHJhbnNsYXRpb25QYXRoICd0cmFuc2xhdGlvbnMnXG5cbiAgICAkcm9vdFNjb3BlLmxhbmd1YWdlcyA9IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ0VuZ2xpc2gnXG4gICAgICAgIHZhbHVlOiAnZW5fVVMnXG4gICAgICB9XG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdGcmVuY2gnXG4gICAgICAgIHZhbHVlOiAnZnJfRlInXG4gICAgICB9XG4gICAgXVxuXG4gICAgJHJvb3RTY29wZS5jaGFuZ2VMYW5nID0gKHZhbHVlKSAtPlxuICAgICAgaTE4bi5zZXRMYW5nIHZhbHVlXG5cbiAgICAkcm9vdFNjb3BlLmlzTGFuZyA9ICh2YWx1ZSkgLT5cbiAgICAgIGkxOG4uZ2V0TGFuZygpID09IHZhbHVlXG5dKVxuXG5hcHAuY29udHJvbGxlcignSG9tZUNvbnRyb2xsZXInLCBbXG4gICckc2NvcGUnXG4gICdpMThuJ1xuICAoJHNjb3BlLCBpMThuKSAtPlxuICAgIGkxOG4ubG9hZFBhZ2UoJ2hvbWUnKS50aGVuIC0+XG4gICAgICAkc2NvcGUudGl0bGUgPSBpMThuLl8gJ1RleHQgdHJhbnNsYXRlZCBmcm9tIHRoZSBjb250cm9sbGVyJ1xuXG4gICAgJHNjb3BlLm5iciA9IDEwXG4gICAgJHNjb3BlLm9iamVjdCA9ICdvYmplY3QnXG4gICAgJHNjb3BlLm9iamVjdHMgPSAnb2JqZWN0cydcbiAgICAkc2NvcGUuc2ltcGxlUGx1cmFsID0gMlxuXSlcblxuYXBwLmNvbnRyb2xsZXIoJ090aGVyQ29udHJvbGxlcicsIFtcbiAgJ2kxOG4nXG4gIChpMThuKSAtPlxuICAgIGkxOG4ubG9hZFBhZ2UgJ290aGVyJ1xuXSlcbiJdfQ==