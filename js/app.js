'use strict';
var app;

app = angular.module('app', ['ngRoute', 'ngCookies', 'jed']);

app.config([
  '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
    return $routeProvider.when('/home', {
      templateUrl: 'partials/home.html',
      controller: 'HomeController'
    }).when('/other', {
      templateUrl: 'partials/other.html',
      controller: 'OtherController'
    }).otherwise({
      redirectTo: '/home'
    });
  }
]).run([
  '$rootScope', 'i18n', function($rootScope, i18n) {
    i18n.setTranslationPath('/translations');
    $rootScope.languages = [
      {
        name: 'English',
        value: 'en_US'
      }, {
        name: 'French',
        value: 'fr_FR'
      }
    ];
    $rootScope.changeLang = function(value) {
      return i18n.setLang(value);
    };
    return $rootScope.isLang = function(value) {
      return i18n.getLang() === value;
    };
  }
]);

app.controller('HomeController', [
  '$scope', 'i18n', function($scope, i18n) {
    i18n.loadPage('home').then(function() {
      return $scope.title = i18n._('Text translated from the controller');
    });
    $scope.nbr = 10;
    $scope.object = 'object';
    $scope.objects = 'objects';
    return $scope.simplePlural = 2;
  }
]);

app.controller('OtherController', [
  'i18n', function(i18n) {
    return i18n.loadPage('other');
  }
]);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBQSxDQUFBO0FBQUEsSUFBQSxHQUFBOztBQUFBLEdBRUEsR0FBTSxPQUFPLENBQUMsTUFBUixDQUFlLEtBQWYsRUFBc0IsQ0FBQyxTQUFELEVBQVksV0FBWixFQUF5QixLQUF6QixDQUF0QixDQUZOLENBQUE7O0FBQUEsR0FJRyxDQUFDLE1BQUosQ0FBVztFQUNULGdCQURTLEVBRVQsbUJBRlMsRUFHVCxTQUFDLGNBQUQsRUFBaUIsaUJBQWpCLEdBQUE7V0FDRSxjQUNFLENBQUMsSUFESCxDQUNRLE9BRFIsRUFFSTtBQUFBLE1BQUEsV0FBQSxFQUFhLG9CQUFiO0FBQUEsTUFDQSxVQUFBLEVBQVksZ0JBRFo7S0FGSixDQUlFLENBQUMsSUFKSCxDQUlRLFFBSlIsRUFLSTtBQUFBLE1BQUEsV0FBQSxFQUFhLHFCQUFiO0FBQUEsTUFDQSxVQUFBLEVBQVksaUJBRFo7S0FMSixDQU9FLENBQUMsU0FQSCxDQVFJO0FBQUEsTUFBQSxVQUFBLEVBQVksT0FBWjtLQVJKLEVBREY7RUFBQSxDQUhTO0NBQVgsQ0FjQSxDQUFDLEdBZEQsQ0FjSztFQUNILFlBREcsRUFFSCxNQUZHLEVBR0gsU0FBQyxVQUFELEVBQWEsSUFBYixHQUFBO0FBQ0UsSUFBQSxJQUFJLENBQUMsa0JBQUwsQ0FBd0IsZUFBeEIsQ0FBQSxDQUFBO0FBQUEsSUFFQSxVQUFVLENBQUMsU0FBWCxHQUF1QjtNQUNyQjtBQUFBLFFBQ0UsSUFBQSxFQUFNLFNBRFI7QUFBQSxRQUVFLEtBQUEsRUFBTyxPQUZUO09BRHFCLEVBS3JCO0FBQUEsUUFDRSxJQUFBLEVBQU0sUUFEUjtBQUFBLFFBRUUsS0FBQSxFQUFPLE9BRlQ7T0FMcUI7S0FGdkIsQ0FBQTtBQUFBLElBYUEsVUFBVSxDQUFDLFVBQVgsR0FBd0IsU0FBQyxLQUFELEdBQUE7YUFDdEIsSUFBSSxDQUFDLE9BQUwsQ0FBYSxLQUFiLEVBRHNCO0lBQUEsQ0FieEIsQ0FBQTtXQWdCQSxVQUFVLENBQUMsTUFBWCxHQUFvQixTQUFDLEtBQUQsR0FBQTthQUNsQixJQUFJLENBQUMsT0FBTCxDQUFBLENBQUEsS0FBa0IsTUFEQTtJQUFBLEVBakJ0QjtFQUFBLENBSEc7Q0FkTCxDQUpBLENBQUE7O0FBQUEsR0EwQ0csQ0FBQyxVQUFKLENBQWUsZ0JBQWYsRUFBaUM7RUFDL0IsUUFEK0IsRUFFL0IsTUFGK0IsRUFHL0IsU0FBQyxNQUFELEVBQVMsSUFBVCxHQUFBO0FBQ0UsSUFBQSxJQUFJLENBQUMsUUFBTCxDQUFjLE1BQWQsQ0FBcUIsQ0FBQyxJQUF0QixDQUEyQixTQUFBLEdBQUE7YUFDekIsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFJLENBQUMsQ0FBTCxDQUFPLHFDQUFQLEVBRFU7SUFBQSxDQUEzQixDQUFBLENBQUE7QUFBQSxJQUdBLE1BQU0sQ0FBQyxHQUFQLEdBQWEsRUFIYixDQUFBO0FBQUEsSUFJQSxNQUFNLENBQUMsTUFBUCxHQUFnQixRQUpoQixDQUFBO0FBQUEsSUFLQSxNQUFNLENBQUMsT0FBUCxHQUFpQixTQUxqQixDQUFBO1dBTUEsTUFBTSxDQUFDLFlBQVAsR0FBc0IsRUFQeEI7RUFBQSxDQUgrQjtDQUFqQyxDQTFDQSxDQUFBOztBQUFBLEdBdURHLENBQUMsVUFBSixDQUFlLGlCQUFmLEVBQWtDO0VBQ2hDLE1BRGdDLEVBRWhDLFNBQUMsSUFBRCxHQUFBO1dBQ0UsSUFBSSxDQUFDLFFBQUwsQ0FBYyxPQUFkLEVBREY7RUFBQSxDQUZnQztDQUFsQyxDQXZEQSxDQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5hcHAgPSBhbmd1bGFyLm1vZHVsZSAnYXBwJywgWyduZ1JvdXRlJywgJ25nQ29va2llcycsICdqZWQnXVxuXG5hcHAuY29uZmlnKFtcbiAgJyRyb3V0ZVByb3ZpZGVyJyxcbiAgJyRsb2NhdGlvblByb3ZpZGVyJ1xuICAoJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSAtPlxuICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgICAud2hlbiAnL2hvbWUnLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2hvbWUuaHRtbCdcbiAgICAgICAgY29udHJvbGxlcjogJ0hvbWVDb250cm9sbGVyJ1xuICAgICAgLndoZW4gJy9vdGhlcicsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAncGFydGlhbHMvb3RoZXIuaHRtbCdcbiAgICAgICAgY29udHJvbGxlcjogJ090aGVyQ29udHJvbGxlcidcbiAgICAgIC5vdGhlcndpc2VcbiAgICAgICAgcmVkaXJlY3RUbzogJy9ob21lJ1xuXSlcbi5ydW4oW1xuICAnJHJvb3RTY29wZSdcbiAgJ2kxOG4nXG4gICgkcm9vdFNjb3BlLCBpMThuKSAtPlxuICAgIGkxOG4uc2V0VHJhbnNsYXRpb25QYXRoICcvdHJhbnNsYXRpb25zJ1xuXG4gICAgJHJvb3RTY29wZS5sYW5ndWFnZXMgPSBbXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdFbmdsaXNoJ1xuICAgICAgICB2YWx1ZTogJ2VuX1VTJ1xuICAgICAgfVxuICAgICAge1xuICAgICAgICBuYW1lOiAnRnJlbmNoJ1xuICAgICAgICB2YWx1ZTogJ2ZyX0ZSJ1xuICAgICAgfVxuICAgIF1cblxuICAgICRyb290U2NvcGUuY2hhbmdlTGFuZyA9ICh2YWx1ZSkgLT5cbiAgICAgIGkxOG4uc2V0TGFuZyB2YWx1ZVxuXG4gICAgJHJvb3RTY29wZS5pc0xhbmcgPSAodmFsdWUpIC0+XG4gICAgICBpMThuLmdldExhbmcoKSA9PSB2YWx1ZVxuXSlcblxuYXBwLmNvbnRyb2xsZXIoJ0hvbWVDb250cm9sbGVyJywgW1xuICAnJHNjb3BlJ1xuICAnaTE4bidcbiAgKCRzY29wZSwgaTE4bikgLT5cbiAgICBpMThuLmxvYWRQYWdlKCdob21lJykudGhlbiAtPlxuICAgICAgJHNjb3BlLnRpdGxlID0gaTE4bi5fICdUZXh0IHRyYW5zbGF0ZWQgZnJvbSB0aGUgY29udHJvbGxlcidcblxuICAgICRzY29wZS5uYnIgPSAxMFxuICAgICRzY29wZS5vYmplY3QgPSAnb2JqZWN0J1xuICAgICRzY29wZS5vYmplY3RzID0gJ29iamVjdHMnXG4gICAgJHNjb3BlLnNpbXBsZVBsdXJhbCA9IDJcbl0pXG5cbmFwcC5jb250cm9sbGVyKCdPdGhlckNvbnRyb2xsZXInLCBbXG4gICdpMThuJ1xuICAoaTE4bikgLT5cbiAgICBpMThuLmxvYWRQYWdlICdvdGhlcidcbl0pXG4iXX0=